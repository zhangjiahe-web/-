<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kgc.zhang.mapper.checkoutMapper" >
  <resultMap id="BaseResultMap" type="com.kgc.zhang.entity.checkout" >
    <id column="cid" property="cid" jdbcType="INTEGER" />
    <result column="house_id" property="houseId" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="userlist_id" property="userlistId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    cid, house_id, address, status, userlist_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kgc.zhang.entity.checkoutExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from checkout
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from checkout
    where cid = #{cid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from checkout
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kgc.zhang.entity.checkoutExample" >
    delete from checkout
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kgc.zhang.entity.checkout" >
    insert into checkout (cid, house_id, address, 
      status, userlist_id)
    values (#{cid,jdbcType=INTEGER}, #{houseId,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{userlistId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kgc.zhang.entity.checkout" >
    insert into checkout
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cid != null" >
        cid,
      </if>
      <if test="houseId != null" >
        house_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="userlistId != null" >
        userlist_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="houseId != null" >
        #{houseId,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="userlistId != null" >
        #{userlistId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kgc.zhang.entity.checkoutExample" resultType="java.lang.Integer" >
    select count(*) from checkout
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update checkout
    <set >
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.houseId != null" >
        house_id = #{record.houseId,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.userlistId != null" >
        userlist_id = #{record.userlistId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update checkout
    set cid = #{record.cid,jdbcType=INTEGER},
      house_id = #{record.houseId,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      userlist_id = #{record.userlistId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kgc.zhang.entity.checkout" >
    update checkout
    <set >
      <if test="houseId != null" >
        house_id = #{houseId,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="userlistId != null" >
        userlist_id = #{userlistId,jdbcType=INTEGER},
      </if>
    </set>
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kgc.zhang.entity.checkout" >
    update checkout
    set house_id = #{houseId,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      userlist_id = #{userlistId,jdbcType=INTEGER}
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <select id="select" resultMap="BaseResultMap">
    select
  `checkout`.*,
  `userlist`.`idcard`,
  `userlist`.`phone`,
  `userlist`.`name`,
  `houselist`.`landlady`
from
  `zu`.`checkout`
  inner join `zu`.`houselist`
    on (
      `checkout`.`house_id` = `houselist`.`houseid`
    )
  INNER JOIN `zu`.`userlist`
    ON (
      `checkout`.`userlist_id` = `userlist`.`id`
    )WHERE landlady=#{landlady}
  </select>
</mapper>